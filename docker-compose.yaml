version: "3.8"

services:

  nginx:
    image: nginx:1.23.3-alpine
    container_name: "nginx"
    ports:
      - 80:80
    volumes:
      - ./dcb_frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - dcb_frontend
    networks:
      - dcb_network

  dcb_frontend:
    container_name: dcb_frontend
    build:
      context: /dcb_frontend/.
    image: dcb_frontend
    env_file:
      - ".env"
    command: ["npm", "start"]
    networks:
      - dcb_network

  dcb_backend:
    build:
      context: dcb_backend/.
    image: dcb_backend
    container_name: "dcb_backend"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - ".env"
    volumes:
      - data:/app
    depends_on:
      - redis
      - database
    networks:
      - dcb_network
  
  database:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ".env"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - dcb_network

  redis:
    image: 'redis/redis-stack-server:7.2.0-v6'
    ports:
      - '6379:6379'
    networks:
      - dcb_network


volumes:
  data:

networks:
  dcb_network: