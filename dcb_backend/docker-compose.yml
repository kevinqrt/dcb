version: "3.8"

services:

  nginx:
    restart: unless-stopped
    image: nginx:1.23.3-alpine
    container_name: "nginx_backend"
    environment:
      - DOMAIN=${DOMAIN}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/templates/:/etc/nginx/templates
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - dcb_backend
    networks:
      - dcb_backend_network
  
  certbot:
    image: certbot/certbot
    container_name: "certbot_backend"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${CERTBOT_EMAIL} -d ${DOMAIN} --agree-tos

  dcb_backend:
    restart: unless-stopped
    build:
      context: .
    image: dcb_backend
    container_name: "dcb_backend"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    expose:
      - "8000"
    env_file:
      - ".env.production"
    volumes:
      - vectorstore:/app/${VECTORSTOREPATH}
      - uploads:/app/${UPLOADPATH}
    depends_on:
      - database
      - redis
    networks:
      - dcb_backend_network
  
  database:
    restart: unless-stopped
    image: postgres
    volumes:
      - database:/var/lib/postgresql/data
    env_file:
      - ".env.production"
    environment:
      - POSTGRES_NAME=${DBNAME}
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASSWORD}
    networks:
      - dcb_backend_network

  redis:
    restart: unless-stopped
    image: 'redis/redis-stack-server:7.2.0-v6'
    expose:
      - "6379"
    networks:
      - dcb_backend_network


volumes:
  uploads:
  vectorstore:
  database:

networks:
  dcb_backend_network: